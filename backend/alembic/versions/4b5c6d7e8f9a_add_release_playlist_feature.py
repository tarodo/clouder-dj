"""add release playlist feature

Revision ID: 4b5c6d7e8f9a
Revises: 3a1b2c3d4e5f
Create Date: 2025-08-03 15:00:00.000000+00:00

"""

# mypy: ignore-errors

from __future__ import annotations

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "4b5c6d7e8f9a"
down_revision: Union[str, None] = "3a1b2c3d4e5f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "release_playlists",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("spotify_playlist_id", sa.String(), nullable=True),
        sa.Column("spotify_playlist_url", sa.String(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("spotify_playlist_id"),
    )
    op.create_index(
        op.f("ix_release_playlists_id"), "release_playlists", ["id"], unique=False
    )
    op.create_table(
        "release_playlist_tracks",
        sa.Column("release_playlist_id", sa.Integer(), nullable=False),
        sa.Column("track_id", sa.Integer(), nullable=False),
        sa.Column("position", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["release_playlist_id"],
            ["release_playlists.id"],
        ),
        sa.ForeignKeyConstraint(
            ["track_id"],
            ["tracks.id"],
        ),
        sa.PrimaryKeyConstraint("release_playlist_id", "position"),
        sa.UniqueConstraint(
            "release_playlist_id", "track_id", name="uq_release_playlist_track"
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("release_playlist_tracks")
    op.drop_index(op.f("ix_release_playlists_id"), table_name="release_playlists")
    op.drop_table("release_playlists")
    # ### end Alembic commands ###
