"""add styles

Revision ID: a4374ccd19c1
Revises: bce879b61d8a
Create Date: 2025-06-21 12:24:16.915442+00:00

"""

# mypy: ignore-errors

from __future__ import annotations

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "a4374ccd19c1"
down_revision: Union[str, None] = "bce879b61d8a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "styles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("beatport_style_id", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("beatport_style_id"),
    )
    op.create_index(op.f("ix_styles_id"), "styles", ["id"], unique=False)
    op.create_index(op.f("ix_styles_name"), "styles", ["name"], unique=True)
    # ### end Alembic commands ###

    styles_table = sa.table(
        "styles",
        sa.column("id", sa.Integer),
        sa.column("name", sa.String),
        sa.column("beatport_style_id", sa.Integer),
    )
    op.bulk_insert(
        styles_table,
        [
            {"id": 1, "name": "dnb", "beatport_style_id": 1},
            {"id": 2, "name": "techno", "beatport_style_id": 90},
        ],
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_styles_name"), table_name="styles")
    op.drop_index(op.f("ix_styles_id"), table_name="styles")
    op.drop_table("styles")
    # ### end Alembic commands ###
